name: LaunchKey Java Actions

on:
  push:
    branches:
      - 'master'
      - '*-DEV'

  pull_request:
    branches:
      - 'master'
      - '*-DEV'

jobs:
  Build-And-Test-All-Java-Versions-On-Linux:
    runs-on: ${{ matrix.os }}

    name: Build and Test on OpenJDK ${{ matrix.java }} / ${{ matrix.os }}

    strategy:
      matrix:
        distribution: [ 'adopt' ]
        java: [ '8', '11', '12', '13', '15', '16', '17' ]
        os: [ 'ubuntu-latest' ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      - name: Build and Test with Maven
        run: mvn clean test

      - name: Job Status
        run: echo "üçè This job's status is ${{ job.status }}."

  Build-And-Test-Latest-On-MacOS:
    runs-on: ${{ matrix.os }}

    name: Build and Test on OpenJDK ${{ matrix.java }} / ${{ matrix.os }}

    strategy:
      matrix:
        distribution: [ 'adopt' ]
        java: [ '17' ]
        os: [ 'macos-latest' ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      - name: Build and Test with Maven
        run: mvn clean test

      - name: Job Status
        run: echo "üçè This job's status is ${{ job.status }}."

  Build-And-Test-Latest-On-Windows:
    runs-on: ${{ matrix.os }}

    name: Build and Test on OpenJDK ${{ matrix.java }} / ${{ matrix.os }}

    strategy:
      matrix:
        distribution: [ 'adopt' ]
        java: [ '17' ]
        os: [ 'windows-latest' ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      - name: Build and Test with Maven
        run: mvn clean test

      - name: Job Status
        run: echo "üçè This job's status is ${{ job.status }}."
